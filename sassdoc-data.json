[
  {
    "description": "Flexbox Containers\n\nThe 'flex' value causes an element to generate a block-level flex\ncontainer box.\n\nThe 'inline-flex' value causes an element to generate a inline-level\nflex container box. \n\ndisplay: flex | inline-flex\n\nhttp://w3.org/tr/css3-flexbox/#flex-containers\n\n(Placeholder selectors for each type, for those who rather @extend)\n",
    "commentRange": {
      "start": 28,
      "end": 40
    },
    "context": {
      "type": "mixin",
      "name": "flexbox",
      "code": "\n\tdisplay: -webkit-box;\n\tdisplay: -webkit-flex;\n\tdisplay: -moz-flex;\n\tdisplay: -ms-flexbox;\n\tdisplay: flex;\n",
      "line": {
        "start": 41,
        "end": 47
      }
    },
    "access": "public",
    "group": [
      "undefined"
    ],
    "file": {
      "path": "flexbox.scss",
      "name": "flexbox.scss"
    }
  },
  {
    "description": "Flexbox Direction\n\nThe 'flex-direction' property specifies how flex items are placed in\nthe flex container, by setting the direction of the flex container's\nmain axis. This determines the direction that flex items are laid out in. \n\nValues: row | row-reverse | column | column-reverse\nDefault: row\n\nhttp://w3.org/tr/css3-flexbox/#flex-direction-property\n",
    "commentRange": {
      "start": 65,
      "end": 74
    },
    "context": {
      "type": "mixin",
      "name": "flex-direction",
      "code": "\n\t@if $value == row-reverse {\n\t\t-webkit-box-direction: reverse;\n\t\t-webkit-box-orient: horizontal;\n\t} @else if $value == column {\n\t\t-webkit-box-direction: normal;\n\t\t-webkit-box-orient: vertical;\n\t} @else if $value == column-reverse {\n\t\t-webkit-box-direction: reverse;\n\t\t-webkit-box-orient: vertical;\n\t} @else {\n\t\t-webkit-box-direction: normal;\n\t\t-webkit-box-orient: horizontal;\n\t}\n\t-webkit-flex-direction: $value;\n\t-moz-flex-direction: $value;\n\t-ms-flex-direction: $value;\n\tflex-direction: $value;\n",
      "line": {
        "start": 75,
        "end": 93
      }
    },
    "access": "public",
    "group": [
      "undefined"
    ],
    "require": [],
    "file": {
      "path": "flexbox.scss",
      "name": "flexbox.scss"
    }
  },
  {
    "description": "Flexbox Wrap\n\nThe 'flex-wrap' property controls whether the flex container is single-line\nor multi-line, and the direction of the cross-axis, which determines\nthe direction new lines are stacked in. \n\nValues: nowrap | wrap | wrap-reverse\nDefault: nowrap\n\nhttp://w3.org/tr/css3-flexbox/#flex-wrap-property\n",
    "commentRange": {
      "start": 99,
      "end": 108
    },
    "context": {
      "type": "mixin",
      "name": "flex-wrap",
      "code": "\n\t// No Webkit Box fallback.\n\t-webkit-flex-wrap: $value;\n\t-moz-flex-wrap: $value;\n\t@if $value == nowrap {\n\t\t-ms-flex-wrap: none;\n\t} @else { \n\t\t-ms-flex-wrap: $value; \n\t}\n\tflex-wrap: $value;\n",
      "line": {
        "start": 109,
        "end": 119
      }
    },
    "access": "public",
    "group": [
      "undefined"
    ],
    "require": [],
    "file": {
      "path": "flexbox.scss",
      "name": "flexbox.scss"
    }
  },
  {
    "description": "Flexbox Flow (shorthand)\n\nThe 'flex-flow' property is a shorthand for setting the 'flex-direction'\nand 'flex-wrap' properties, which together define the flex container's\nmain and cross axes.\n\nValues: <flex-direction> | <flex-wrap> \nDefault: row nowrap\n\nhttp://w3.org/tr/css3-flexbox/#flex-flow-property\n",
    "commentRange": {
      "start": 123,
      "end": 132
    },
    "context": {
      "type": "mixin",
      "name": "flex-flow",
      "code": "\n\t// No Webkit Box fallback.\n\t-webkit-flex-flow: $values;\n\t-moz-flex-flow: $values;\n\t-ms-flex-flow: $values;\n\tflex-flow: $values;\n",
      "line": {
        "start": 133,
        "end": 139
      }
    },
    "access": "public",
    "group": [
      "undefined"
    ],
    "require": [],
    "file": {
      "path": "flexbox.scss",
      "name": "flexbox.scss"
    }
  },
  {
    "description": "Flexbox Order\n\nThe 'order' property controls the order in which flex items appear within\ntheir flex container, by assigning them to ordinal groups.\n\nDefault: 0\n\nhttp://w3.org/tr/css3-flexbox/#order-property\n",
    "commentRange": {
      "start": 143,
      "end": 150
    },
    "context": {
      "type": "mixin",
      "name": "order",
      "code": "\n\t-webkit-box-ordinal-group: $int + 1;\n\t-webkit-order: $int;\n\t-moz-order: $int;\n\t-ms-flex-order: $int;\n\torder: $int;\n",
      "line": {
        "start": 151,
        "end": 157
      }
    },
    "access": "public",
    "group": [
      "undefined"
    ],
    "require": [],
    "file": {
      "path": "flexbox.scss",
      "name": "flexbox.scss"
    }
  },
  {
    "description": "Flexbox Grow\n\nThe 'flex-grow' property sets the flex grow factor. Negative numbers\nare invalid.\n\nDefault: 0\n\nhttp://w3.org/tr/css3-flexbox/#flex-grow-property\n",
    "commentRange": {
      "start": 161,
      "end": 168
    },
    "context": {
      "type": "mixin",
      "name": "flex-grow",
      "code": "\n\t-webkit-box-flex: $int;\n\t-webkit-flex-grow: $int;\n\t-moz-flex-grow: $int;\n\t-ms-flex-positive: $int;\n\tflex-grow: $int;\n",
      "line": {
        "start": 169,
        "end": 175
      }
    },
    "access": "public",
    "group": [
      "undefined"
    ],
    "require": [],
    "file": {
      "path": "flexbox.scss",
      "name": "flexbox.scss"
    }
  },
  {
    "description": "Flexbox Shrink\n\nThe 'flex-shrink' property sets the flex shrink factor. Negative numbers\nare invalid.\n\nDefault: 1\n\nhttp://w3.org/tr/css3-flexbox/#flex-shrink-property\n",
    "commentRange": {
      "start": 179,
      "end": 186
    },
    "context": {
      "type": "mixin",
      "name": "flex-shrink",
      "code": "\n\t-webkit-flex-shrink: $int;\n\t-moz-flex-shrink: $int;\n\t-ms-flex-negative: $int;\n\tflex-shrink: $int;\n",
      "line": {
        "start": 187,
        "end": 192
      }
    },
    "access": "public",
    "group": [
      "undefined"
    ],
    "require": [],
    "file": {
      "path": "flexbox.scss",
      "name": "flexbox.scss"
    }
  },
  {
    "description": "Flexbox Basis\n\nThe 'flex-basis' property sets the flex basis. Negative lengths are invalid. \n\nValues: Like \"width\" \nDefault: auto\n\nhttp://www.w3.org/TR/css3-flexbox/#flex-basis-property\n",
    "commentRange": {
      "start": 196,
      "end": 203
    },
    "context": {
      "type": "mixin",
      "name": "flex-basis",
      "code": "\n\t-webkit-flex-basis: $value;\n\t-moz-flex-basis: $value;\n\t-ms-flex-preferred-size: $value;\n\tflex-basis: $value;\n",
      "line": {
        "start": 204,
        "end": 209
      }
    },
    "access": "public",
    "group": [
      "undefined"
    ],
    "require": [],
    "file": {
      "path": "flexbox.scss",
      "name": "flexbox.scss"
    }
  },
  {
    "description": "Flexbox \"Flex\" (shorthand)\n\nThe 'flex' property specifies the components of a flexible length: the\nflex grow factor and flex shrink factor, and the flex basis. When an\nelement is a flex item, 'flex' is consulted instead of the main size\nproperty to determine the main size of the element. If an element is\nnot a flex item, 'flex' has no effect.\n\nValues: none | <flex-grow> <flex-shrink> || <flex-basis>\nDefault: See individual properties (1 1 0).\n\nhttp://w3.org/tr/css3-flexbox/#flex-property\n",
    "commentRange": {
      "start": 213,
      "end": 224
    },
    "context": {
      "type": "mixin",
      "name": "flex",
      "code": "\n    \n\t// Set a variable to be used by box-flex properties\n\t$fg-boxflex: $fg;\n\n\t// Box-Flex only supports a flex-grow value so let's grab the\n\t// first item in the list and just return that.\n\t@if type-of($fg) == 'list' {\n\t\t$fg-boxflex: nth($fg, 1);\n\t}\n\n\t-webkit-box-flex: $fg-boxflex;\n\t-webkit-flex: $fg $fs $fb;\n\t-moz-box-flex: $fg-boxflex;\n\t-moz-flex: $fg $fs $fb;\n\t-ms-flex: $fg $fs $fb;\n\tflex: $fg $fs $fb;\n",
      "line": {
        "start": 225,
        "end": 242
      }
    },
    "access": "public",
    "group": [
      "undefined"
    ],
    "require": [],
    "file": {
      "path": "flexbox.scss",
      "name": "flexbox.scss"
    }
  },
  {
    "description": "Flexbox Justify Content\n\nThe 'justify-content' property aligns flex items along the main axis\nof the current line of the flex container. This is done after any flexible\nlengths and any auto margins have been resolved. Typically it helps distribute\nextra free space leftover when either all the flex items on a line are\ninflexible, or are flexible but have reached their maximum size. It also\nexerts some control over the alignment of items when they overflow the line.\n\nNote: 'space-*' values not supported in older syntaxes.\n\nValues: flex-start | flex-end | center | space-between | space-around\nDefault: flex-start\n\nhttp://w3.org/tr/css3-flexbox/#justify-content-property\n",
    "commentRange": {
      "start": 246,
      "end": 260
    },
    "context": {
      "type": "mixin",
      "name": "justify-content",
      "code": "\n\t@if $value == flex-start {\n\t\t-webkit-box-pack: start;\n\t\t-ms-flex-pack: start;\n\t} @else if $value == flex-end {\n\t\t-webkit-box-pack: end;\n\t\t-ms-flex-pack: end;\n\t} @else if $value == space-between {\n\t\t-webkit-box-pack: justify;\n\t\t-ms-flex-pack: justify;\n\t} @else if $value == space-around {\n\t\t-ms-flex-pack: distribute;\t\t\n\t} @else {\n\t\t-webkit-box-pack: $value;\n\t\t-ms-flex-pack: $value;\n\t}\n\t-webkit-justify-content: $value;\n\t-moz-justify-content: $value;\n\tjustify-content: $value;\n",
      "line": {
        "start": 261,
        "end": 280
      }
    },
    "access": "public",
    "group": [
      "undefined"
    ],
    "require": [],
    "file": {
      "path": "flexbox.scss",
      "name": "flexbox.scss"
    }
  },
  {
    "description": "Flexbox Align Items\n\nFlex items can be aligned in the cross axis of the current line of the\nflex container, similar to 'justify-content' but in the perpendicular\ndirection. 'align-items' sets the default alignment for all of the flex\ncontainer's items, including anonymous flex items. 'align-self' allows\nthis default alignment to be overridden for individual flex items. (For\nanonymous flex items, 'align-self' always matches the value of 'align-items'\non their associated flex container.) \n\nValues: flex-start | flex-end | center | baseline | stretch\nDefault: stretch\n\nhttp://w3.org/tr/css3-flexbox/#align-items-property\n",
    "commentRange": {
      "start": 286,
      "end": 299
    },
    "context": {
      "type": "mixin",
      "name": "align-items",
      "code": "\n\t@if $value == flex-start {\n\t\t-webkit-box-align: start;\n\t\t-ms-flex-align: start;\n\t} @else if $value == flex-end {\n\t\t-webkit-box-align: end;\n\t\t-ms-flex-align: end;\n\t} @else {\n\t\t-webkit-box-align: $value;\n\t\t-ms-flex-align: $value;\n\t}\n\t-webkit-align-items: $value;\n\t-moz-align-items: $value;\n\talign-items: $value;\n",
      "line": {
        "start": 300,
        "end": 314
      }
    },
    "access": "public",
    "group": [
      "undefined"
    ],
    "require": [],
    "file": {
      "path": "flexbox.scss",
      "name": "flexbox.scss"
    }
  },
  {
    "description": "Flexbox Align Self\n\nValues: auto | flex-start | flex-end | center | baseline | stretch\nDefault: auto\n",
    "commentRange": {
      "start": 318,
      "end": 321
    },
    "context": {
      "type": "mixin",
      "name": "align-self",
      "code": "\n\t// No Webkit Box Fallback.\n\t-webkit-align-self: $value;\n\t-moz-align-self: $value;\n\t@if $value == flex-start {\n\t\t-ms-flex-item-align: start;\n\t} @else if $value == flex-end {\n\t\t-ms-flex-item-align: end;\n\t} @else {\n\t\t-ms-flex-item-align: $value;\n\t}\n\talign-self: $value;\n",
      "line": {
        "start": 322,
        "end": 334
      }
    },
    "access": "public",
    "group": [
      "undefined"
    ],
    "require": [],
    "file": {
      "path": "flexbox.scss",
      "name": "flexbox.scss"
    }
  },
  {
    "description": "Flexbox Align Content\n\nThe 'align-content' property aligns a flex container's lines within the\nflex container when there is extra space in the cross-axis, similar to\nhow 'justify-content' aligns individual items within the main-axis. Note,\nthis property has no effect when the flexbox has only a single line.\n\nValues: flex-start | flex-end | center | space-between | space-around | stretch\nDefault: stretch\n\nhttp://w3.org/tr/css3-flexbox/#align-content-property\n",
    "commentRange": {
      "start": 338,
      "end": 348
    },
    "context": {
      "type": "mixin",
      "name": "align-content",
      "code": "\n\t// No Webkit Box Fallback.\n\t-webkit-align-content: $value;\n\t-moz-align-content: $value;\n\t@if $value == flex-start {\n\t\t-ms-flex-line-pack: start;\n\t} @else if $value == flex-end {\n\t\t-ms-flex-line-pack: end;\n\t} @else {\n\t\t-ms-flex-line-pack: $value;\n\t}\n\talign-content: $value;\n",
      "line": {
        "start": 349,
        "end": 361
      }
    },
    "access": "public",
    "group": [
      "undefined"
    ],
    "require": [],
    "file": {
      "path": "flexbox.scss",
      "name": "flexbox.scss"
    }
  }
]
